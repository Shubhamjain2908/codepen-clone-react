{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.js","components/App.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Editor","props","language","displayName","onChange","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAIe,SAASA,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,iBAGkBF,EAD0B,EAG7BG,oBAAS,WAC/B,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACAA,IAEAA,KAVwC,mBAGhDQ,EAHgD,KAGzCC,EAHyC,KAkBvD,OAJAC,qBAAU,WACNN,aAAaO,QAAQV,EAAaK,KAAKM,UAAUJ,MAClD,CAACP,EAAaO,IAEV,CAACA,EAAOC,G,0DCyBJI,MArCf,SAAgBC,GAAQ,IACZC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaR,EAAoBM,EAApBN,MAAOS,EAAaH,EAAbG,SADnB,EAGKf,oBAAS,GAHd,mBAGZgB,EAHY,KAGNC,EAHM,KASnB,OACI,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC5C,yBAAKE,UAAU,gBACVJ,EACD,4BACIK,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAEpC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAGtD,kBAAC,aAAD,CACIC,eAjBZ,SAAsBC,EAAQC,EAAMrB,GAChCS,EAAST,IAiBDA,MAAOA,EACPY,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMlB,EACNmB,MAAO,WACPC,aAAa,OCqBlBC,MAzDf,WAAgB,IAAD,EACWtC,EAAgB,OAAQ,IADnC,mBACNuC,EADM,KACAC,EADA,OAESxC,EAAgB,MAAO,IAFhC,mBAENyC,EAFM,KAEDC,EAFC,OAGO1C,EAAgB,KAAM,IAH7B,mBAGN2C,EAHM,KAGFC,EAHE,OAKexC,mBAAS,IALxB,mBAKNyC,EALM,KAKEC,EALF,KAqBb,OAdAlC,qBAAU,WACR,IAAMmC,EAAUC,YAAW,WACzBF,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,sCAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKrB,UAAU,iBACb,kBAAC,EAAD,CACEL,SAAS,MACTC,YAAY,OACZR,MAAO6B,EACPpB,SAAUqB,IAEZ,kBAAC,EAAD,CACEvB,SAAS,MACTC,YAAY,MACZR,MAAO+B,EACPtB,SAAUuB,IAEZ,kBAAC,EAAD,CACEzB,SAAS,aACTC,YAAY,KACZR,MAAOiC,EACPxB,SAAUyB,KAGd,yBAAKtB,UAAU,QACb,4BACEuB,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,Y,MCjDjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.72912982.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst PREFIX = 'codepen-clone-';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n        if (typeof initialValue === 'function') {\r\n            return initialValue()\r\n        } else {\r\n            return initialValue\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value]);\r\n\r\n    return [value, setValue];\r\n}\r\n","import { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/theme/material.css';\r\nimport React, { useState } from 'react';\r\nimport { Controlled as ControllerEditor } from 'react-codemirror2';\r\n\r\nfunction Editor(props) {\r\n    const { language, displayName, value, onChange } = props;\r\n\r\n    const [open, setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControllerEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor;\r\n","import React, { useEffect, useState } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport Editor from './Editor';\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '');\n  const [css, setCss] = useLocalStorage('css', '');\n  const [js, setJs] = useLocalStorage('js', '');\n\n  const [srcDoc, setSrcDoc] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n    `);\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}